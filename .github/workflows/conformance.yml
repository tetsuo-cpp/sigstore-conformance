name: Self-test

on:
  push:
    branches:
      - main
  issue_comment:
    types: [created, edited]
  workflow_dispatch:

jobs:
  selftest:
    permissions:
      id-token: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
      - uses: octokit/request-action@v2.x
        id: create_check_run
        with:
          route: POST /repos/{repo}/check-runs
          repo: ${{ steps.pr_data.outputs.repo_name }}
          name: "Test check run"
          head_sha: ${{ steps.pr_data.outputs.branch }}
          output: | # The | is significant!
            title: Test check run title
            summary: A summary of the test check run
          status: in_progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: clone branch of PR
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.pr_data.outputs.branch }}
      - name: install sigstore-python
        run: pip install sigstore
      - name: conformance test sigstore-python
        uses: ./
        id: sigstore-conformance
        with:
          entrypoint: ${{ github.workspace }}/sigstore-python-conformance
      - uses: octokit/request-action@v2.x
        id: update_check_run
        with:
          route: PATCH /repos/{repo}/check-runs/{check_run_id}
          repo: ${{ steps.pr_data.outputs.repo_name }}
          check_run_id: ${{ fromJson(steps.create_check_run.outputs.data).id }}
          status: completed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
